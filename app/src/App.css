#App{
/* The ID for App applies to the whole page, this allows to add a background image.
It is an ID because one of our requirements was to have the functionality of a changing background according to sunset times. */

	background-repeat: no-repeat;
	background-size:cover;
	height:100vh;
	color: aliceblue;
	text-shadow: 1px 1px 6px black;
}


.header{
/* The CSS class for header applies to the div containing the search button, the display of the location and the share button.
This allows us to set a font size and add a margin and padding in order to create space around elements inside and outside borders */

	font-size: 19px;
	margin-bottom: 10px;
	padding:10px;
}

.header_share{/*This applies to the share button within the header. It positions the icon in the correct place. */
	position: absolute;
	 top: 12px;
	 right: 16px;
	 font-size: 18px;
}

.header_location{
	/* The CSS class for header applies to the div containing the search button, the display of the location and the share button.
	This allows us to set a font size and add a margin and padding in order to create space around elements inside and outside borders */

	width: fit-content;
	margin: 0 auto;
	margin-top:-48px;
}

.conditions{
/* The CSS class for conditions applies to the section containing the conditions of the day: the emoji, the current weather, the high and low, the feels like and the condition description.
We have assigned a specific font which corresponds with our design. */

	display: inline-block;
	position:relative;
	width:100%;
	height:35%;
	font-family: "Mukta Mahee";
	font-size: 20px;
	margin-bottom: 10px;
}

.conditions_l{
/* The CSS class for conditions_l applies to the left section of the conditions, so the emoji and the condition description.
This class ensures they are floated to the left and fit a to a specific height. It also adds center allignment to the text. */

	width: 50%;
	float: left;
	height: 100%;
	text-align: center;
	margin-left: 0px;

}

.conditions_r{
/* The CSS class for conditions_r applies to the right section of the conditions, so the current weather, the high and low and the feels like.
This class ensures they are floated to the right and fit a to a specific height. It also adds center allignment to the text. */

	width: 50%;
	float:right;
	height: 100%;
	text-align: center;

}

.conditions_l_emoji{
/* The CSS class for conditions_l_emoji applies to the emoji corresponding to the weather.
This class ensures emoji is given a fixed height and width, so every emoji displayed is the same size. */

	height:150 px;
	width:150 px;
}



.conditions_l_cond{
 /* The CSS class for conditions_l_condition applies to the current weather description. This class ensures */

}

.conditions_r_hilo{
/* The CSS class for conditions_r_hilo applies to the high and low for today.
This class ensures the correct font and font size is used for our high and low, and padding is added in order to seperate it from the current temperature and feels like element. */

	font-family: "Mukta Mahee";
	font-size: 25px;
	padding-bottom: 5px;
	padding-top: 5px;

}

.conditions_r_temp{
/* The CSS class for conditions_r_temp applies to the current temperature.
This class ensures the correct font is used, this varsity style font is very important as it is a key requirement for our stakeholder.
The font has also been edited and given style to make it more appealing. A margin has been added at the top and bottom in order to create space around the elements.*/

	font-family:"Graduate";
	font-size: 70px;
	font-weight: 900;
	text-shadow: 1px 1px 13px black;
	margin-bottom: 2px;
	margin-top: -5px;
}

.conditions_r_fl{
/* The CSS class for conditions_r_fl applies to the feels like element.
This class ensures that a margin is kept at the top of the feels like, in order to keep spacing between the low for the day and the feels like. */

	margin-top: 12px;

}


.rest{
/* The CSS class for rest applies to the section in the middle of the screen which shows an emoji of the weather for the next 7 hours .
This class ensures that a margin is kept at the top of the feels like, in order to keep spacing between the low for the day and the feels like. */


}

.compare{
/* The CSS class for compare applies to the comparison to day before of the weather. This class allowed us to add the font style we chose in our design and apply it to the weather comparison. It also allowed us to position it correctly on the screen. */

	font-family: "Pacifico";
	font-size: 30px;
	min-width: 100%;
	text-align: center;
}

.footer{ /* This CSS class for footer applies to the what to take and travel elements. It allows us to set a width and align the text for the section. */
    
	width: 100%;
	display: inline-block;
	text-align: center;
}

#header_dropdown{ /* This CSS ID for header_dropdown. It allows us to style the dropdown box that appears once the search bbutton is clicked. */
    
	width:74%;
	height:0%;
	left:40px;
	background-color:rgba(0,0,0,0.2);
	position:absolute;
	top:-40%;
	z-index:1;
	transition: 0.9s;
	display: inline-block;
	padding-top: 5px;
	padding-left: 12px;
}


#theTravel,#theTake{  /* This CSS ID for theTravel and theTake. These are the two boxes at the bottom of the page that display furthern information when they are clicked on. */

	top:59.1vh;
	height:300%;
	width:100%;
	max-height: 42.5vh;
	position:absolute;
	background-color:rgba(0,0,0,0.7);
	left:-100%;
	z-index:1;
	transition: 0.9s;
	display: inline-block;
	font-size: 20px;
	overflow-y: auto;
}

#bakerloo{ /* This CSS ID the bakerloo line, it allows us to add a background colour to the service update. */
    
    background-color: #996633;
}

#central{ /* This CSS ID the central line, it allows us to add a background colour to the service update. */
    
	background-color:red;
}

#circle{ /* This CSS ID the circle line, it allows us to add a background colour to the service update. */
    
    background-color: #ffcc00;
}

#district{ /* This CSS ID the district line, it allows us to add a background colour to the service update. */
    
    background-color: #006633;
}

#hammersmith-city{ /* This CSS ID the hammersmith and city line, it allows us to add a background colour to the service update. */
    background-color: #FF99CC;
}

#jubilee{ /* This CSS ID the jubilee line, it allows us to add a background colour to the service update. */
    background-color: #666666;
}

#metropolitan{ /* This CSS ID the metropolitan line, it allows us to add a background colour to the service update. */
    background-color: #990033;
}

#northern{ /* This CSS ID the northern line, it allows us to add a background colour to the service update. */
    background-color: #000000;
}

#piccadilly{ /* This CSS ID the piccadilly line, it allows us to add a background colour to the service update. */
    background-color: #003399;
}

#victoria{ /* This CSS ID the victoria line, it allows us to add a background colour to the service update. */
    background-color: #3399CC;
}

#waterloo-city{ /* This CSS ID the waterloo and city line, it allows us to add a background colour to the service update. */
    background-color: #66CCCC;
}


.scroll{ /* This CSS class applies to the scroll in the travel section. It allows the user to scroll through the different tube lines and ensures that any extra information added is added to the scroll. */
    
	height: 80%;
	max-height: 27vh;
	overflow-y: auto;
	width: 100%;
}

.closebutton{ /* This CSS class applies to closing the box of the travel and what to take. */

	width: 100%;
	height: 100%;
}


.footer_take{ /* This CSS class applies to the take section that you can see on the screen before it is clicked. It ensures the box is floated to the left and has the correct styling. */


	padding-top: 5px;
	width: 48%;
	background-color:rgba(0,0,0,0.2);
	float:left;
	min-height: 150px;
}

.footer_take:hover{ /* This CSS class applies to the take section when hovering over the box. It dims the background once a user hovers. */
    
	background-color:rgba(0,0,0,0.5);
}

.footer_travel{ /* This CSS class applies to the travel section that you can see on the screen before it is clicked. It ensures the box is floated to the right and has the correct styling. */
    
	padding-top: 5px;
	width: 48%;
	background-color:rgba(0,0,0,0.2);
	float:right;
	min-height: 150px;
}

.footer_travel:hover{ /* This CSS class applies to the travel section when hovering over the box. It dims the background once a user hovers. */
    
	background-color:rgba(0,0,0,0.5);
}

input { /*This CSS applies to the inputs of the system. */
    
	margin-right: 10px;
	width: 80%;

}

button{ /*This CSS applies to the buttons of the system. */
    
	all: unset;
}

form{ /*This CSS applies to the forms of the system. */
    
	display: inline-flex;
}

table { /*This CSS applies to the tables of the system. */

	width: 100%;
	text-align: center;
	min-height: 80px;
	background-color:rgba(0,0,0,0.2);
}

#country,#city{ /*This CSS applies to country and city which is in our search icon. */
	border-radius: 8px;
	border: 1px solid #ccc;
	margin: 8px 2px;
}

#go{ /*This CSS applies to the go button in the search bar. */

	border-radius: 8px;
	background-color:#5e605f ; /* Green */
    border: none;
    color: white;

    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 8px 1px;
}
#blur, #blur2, #blur3{ /*This CSS applies to different elements, it blurs the background of the app once something is clicked. */
	transition: 0.9s;
}
